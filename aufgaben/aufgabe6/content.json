{
  "html": {
    "Start": {
      "value": "HTML \n \n Die Hypertext Markup Language (HTML, englisch für Hypertext-Auszeichnungssprache) ist eine textbasierte Auszeichnungssprache zur Strukturierung elektronischer Dokumente wie Texte mit Hyperlinks, Bildern und anderen Inhalten. HTML-Dokumente sind die Grundlage des World Wide Web und werden von Webbrowsern dargestellt. Neben den vom Browser angezeigten Inhalten können HTML-Dateien zusätzliche Angaben in Form von Metainformationen enthalten, z. B. über die im Text verwendeten Sprachen, den Autor oder den zusammengefassten Inhalt des Textes. \n \n HTML wird vom World Wide Web Consortium (W3C) und der Web Hypertext Application Technology Working Group (WHATWG) weiterentwickelt. Die aktuelle Version ist seit dem 14. Dezember 2017 HTML 5.2, die bereits von vielen aktuellen Webbrowsern und anderen Layout-Engines unterstützt wird. Auch die Extensible Hypertext Markup Language (XHTML) wird durch HTML5 ersetzt. \n \n HTML dient als Auszeichnungssprache dazu, einen Text semantisch zu strukturieren, nicht aber zu formatieren. Die visuelle Darstellung ist nicht Teil der HTML-Spezifikationen und wird durch den Webbrowser und Gestaltungsvorlagen wie CSS bestimmt. Ausnahme sind die als veraltet (englisch deprecated) markierten präsentationsbezogenen Elemente. \n \n https://de.wikipedia.org/wiki/Hypertext_Markup_Language"
    },
    "headings": {
      "value": "Headings \n \n HTML headings are titles or subtitles that you want to display on a webpage. \n \n HTML headings are defined with the <h1> to <h6> tags.\n\n<h1> defines the most important heading. <h6> defines the least important heading. \n \n Headings Are Important\n\nSearch engines use the headings to index the structure and content of your web pages.\n\nUsers often skim a page by its headings. It is important to use headings to show the document structure.\n\n<h1> headings should be used for main headings, followed by <h2> headings, then the less important <h3>, and so on. \n Each HTML heading has a default size. However, you can specify the size for any heading with the style attribute, using the CSS font-size property: \n \n Quelle: https://www.w3schools.com/html/html_headings.asp"
    },
    "paragraphs": {
      "value": "Paragraphs \n \n A paragraph always starts on a new line, and is usually a block of text. \n The HTML <p> element defines a paragraph.\n\nA paragraph always starts on a new line, and browsers automatically add some white space (a margin) before and after a paragraph. \n You cannot be sure how HTML will be displayed.\n\nLarge or small screens, and resized windows will create different results.\n\nWith HTML, you cannot change the display by adding extra spaces or extra lines in your HTML code.\n\nThe browser will automatically remove any extra spaces and lines when the page is displayed.\n The <hr> tag defines a thematic break in an HTML page, and is most often displayed as a horizontal rule.\n\nThe <hr> element is used to separate content (or define a change) in an HTML page. \n The <hr> tag is an empty tag, which means that it has no end tag.\n \nThe HTML <br> element defines a line break.\n\nUse <br> if you want a line break (a new line) without starting a new paragraph. \n \n Quelle: https://www.w3schools.com/html/html_paragraphs.asp"
    },
    "links": {
      "value": "Links \n \n Links are found in nearly all web pages. Links allow users to click their way from page to page.\n\nHTML links are hyperlinks.\n\nYou can click on a link and jump to another document.\n\nWhen you move the mouse over a link, the mouse arrow will turn into a little hand. \n The HTML <a> tag defines a hyperlink. It has the following syntax:\n\n<a href=\"url\">link text</a>\nThe most important attribute of the <a> element is the href attribute, which indicates the link's destination.\n\nThe link text is the part that will be visible to the reader.\n\nClicking on the link text, will send the reader to the specified URL address. \n By default, links will appear as follows in all browsers:\n\nAn unvisited link is underlined and blue\nA visited link is underlined and purple\nAn active link is underlined and red \n By default, the linked page will be displayed in the current browser window. To change this, you must specify another target for the link.\n\nThe target attribute specifies where to open the linked document.\n\nThe target attribute can have one of the following values:\n\n_self - Default. Opens the document in the same window/tab as it was clicked\n_blank - Opens the document in a new window or tab\n_parent - Opens the document in the parent frame\n_top - Opens the document in the full body of the window \n \n Quelle: https://www.w3schools.com/html/html_links.asp"
    },
    "images": {
      "value": "Images \n \n Images can improve the design and the appearance of a web page. \n The HTML <img> tag is used to embed an image in a web page.\n\nImages are not technically inserted into a web page; images are linked to web pages. The <img> tag creates a holding space for the referenced image.\n\nThe <img> tag is empty, it contains attributes only, and does not have a closing tag.\n\nThe <img> tag has two required attributes:\n\nsrc - Specifies the path to the image\nalt - Specifies an alternate text for the image \n The required src attribute specifies the path (URL) to the image.\n\nNote: When a web page loads; it is the browser, at that moment, that gets the image from a web server and inserts it into the page. Therefore, make sure that the image actually stay in the same spot in relation to the web page, otherwise your visitors will get a broken link icon. The broken link icon is shown if the browser cannot find the image. \n \n The required alt attribute provides an alternate text for an image, if the user for some reason cannot view it (because of slow connection, an error in the src attribute, or if the user uses a screen reader).\n\nThe value of the alt attribute should describe the image: \n \n Quelle: https://www.w3schools.com/html/html_images.asp"
    },
    "tables": {
      "value": "Tables \n \n HTML tables allow web developers to arrange data into rows and columns. \n The <table> tag defines an HTML table.\n\nEach table row is defined with a <tr> tag. Each table header is defined with a <th> tag. Each table data/cell is defined with a <td> tag.\n\nBy default, the text in <th> elements are bold and centered.\n\nBy default, the text in <td> elements are regular and left-aligned. \n To add a border to a table, use the CSS border property. \n Cell padding specifies the space between the cell content and its borders.\n\nIf you do not specify a padding, the table cells will be displayed without padding.\n\nTo set the padding, use the CSS padding property. \n \n Quelle: https://www.w3schools.com/html/html_tables.asp"
    }

  },
  "css": {
    "Start": {
      "value": "CSS \n \n Cascading Style Sheets (CSS) is a style sheet language used for describing the presentation of a document written in a markup language like HTML. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.\n\nCSS is designed to enable the separation of presentation and content, including layout, colors, and fonts. This separation can improve content accessibility, provide more flexibility and control in the specification of presentation characteristics, enable multiple web pages to share formatting by specifying the relevant CSS in a separate .css file, and reduce complexity and repetition in the structural content.\n\nSeparation of formatting and content also makes it feasible to present the same markup page in different styles for different rendering methods, such as on-screen, in print, by voice (via speech-based browser or screen reader), and on Braille-based tactile devices. CSS also has rules for alternate formatting if the content is accessed on a mobile device.\n\nThe name cascading comes from the specified priority scheme to determine which style rule applies if more than one rule matches a particular element. This cascading priority scheme is predictable.\n\nThe CSS specifications are maintained by the World Wide Web Consortium (W3C). Internet media type (MIME type) text/css is registered for use with CSS by RFC 2318 (March 1998). The W3C operates a free CSS validation service for CSS documents.\n\nIn addition to HTML, other markup languages support the use of CSS including XHTML, plain XML, SVG, and XUL. \n \n Quelle: https://en.wikipedia.org/wiki/Cascading_Style_Sheets"
    },
    "selectors": {
      "value": "CSS Selectors \n \n CSS selectors are used to \"find\" (or select) the HTML elements you want to style.\n\nWe can divide CSS selectors into five categories:\n\nSimple selectors (select elements based on name, id, class)\nCombinator selectors (select elements based on a specific relationship between them)\nPseudo-class selectors (select elements based on a certain state)\nPseudo-elements selectors (select and style a part of an element)\nAttribute selectors (select elements based on an attribute or attribute value)\nThis page will explain the most basic CSS selectors. \n The element selector selects HTML elements based on the element name. \n The id selector uses the id attribute of an HTML element to select a specific element.\n\nThe id of an element is unique within a page, so the id selector is used to select one unique element!\n\nTo select an element with a specific id, write a hash (#) character, followed by the id of the element. \n \n Quelle: https://www.w3schools.com/css/css_selectors.asp"
    },
    "colors": {
      "value": "CSS Colors \n \n With CSS, colors can be specified in different ways:\n\nBy color names\nAs RGB values\nAs hexadecimal values\nAs HSL values (CSS3)\nAs HWB values (CSS4)\nWith the currentcolor keyword \n RGB color values are supported in all browsers.\n\nAn RGB color value is specified with: rgb( RED , GREEN , BLUE ).\n\nEach parameter defines the intensity of the color as an integer between 0 and 255.\n\nFor example, rgb(0,0,255) is rendered as blue, because the blue parameter is set to its highest value (255) and the others are set to 0.\n Hexadecimal color values are also supported in all browsers.\n\nA hexadecimal color is specified with: #RRGGBB.\n\nRR (red), GG (green) and BB (blue) are hexadecimal integers between 00 and FF specifying the intensity of the color.\n\nFor example, #0000FF is displayed as blue, because the blue component is set to its highest value (FF) and the others are set to 00.\n \n Quelle: https://www.w3schools.com/cssref/css_colors.asp, https://www.w3schools.com/colors/default.asp"
    },
    "boxes": {
      "value": "CSS Boxes\n \n All HTML elements can be considered as boxes. In CSS, the term \"box model\" is used when talking about design and layout.\n\nThe CSS box model is essentially a box that wraps around every HTML element. It consists of: margins, borders, padding, and the actual content. The image below illustrates the box model:\n Explanation of the different parts:\n\nContent - The content of the box, where text and images appear\nPadding - Clears an area around the content. The padding is transparent\nBorder - A border that goes around the padding and content\nMargin - Clears an area outside the border. The margin is transparent\nThe box model allows us to add a border around elements, and to define space between elements. \n \nQuelle: https://www.w3schools.com/css/css_boxmodel.asp"
    },
    "displays": {
      "value": "CSS Displays \n \n The display property specifies the display behavior (the type of rendering box) of an element.\n\nIn HTML, the default display property value is taken from the HTML specifications or from the browser/user default style sheet. The default value in XML is inline, including SVG elements.\n \n Quelle: https://www.w3schools.com/cssref/pr_class_display.asp"
    },
    "float": {
      "value": "CSS Float \n \nThe CSS float property specifies how an element should float.\n\nThe CSS clear property specifies what elements can float beside the cleared element and on which side. \n The float property is used for positioning and formatting content e.g. let an image float left to the text in a container.\n\nThe float property can have one of the following values:\n\nleft - The element floats to the left of its container\nright - The element floats to the right of its container\nnone - The element does not float (will be displayed just where it occurs in the text). This is default\ninherit - The element inherits the float value of its parent\nIn its simplest use, the float property can be used to wrap text around images.  \n \n Quelle: https://www.w3schools.com/css/css_float.asp"
    }
  },
  "javascript": {
    "Start": {
      "value": "JavaScript \n \n JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions. While it is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat. JavaScript is a prototype-based, multi-paradigm, single-threaded, dynamic language, supporting object-oriented, imperative, and declarative (e.g. functional programming) styles. Read more about JavaScript.\n\nThis section is dedicated to the JavaScript language itself, and not the parts that are specific to Web pages or other host environments. For information about API specifics to Web pages, please see Web APIs and DOM.\n\nThe standard for JavaScript is ECMAScript. As of 2012, all modern browsers fully support ECMAScript 5.1. Older browsers support at least ECMAScript 3. On June 17, 2015, ECMA International published the sixth major version of ECMAScript, which is officially called ECMAScript 2015, and was initially referred to as ECMAScript 6 or ES6. Since then, ECMAScript standards are on yearly release cycles. This documentation refers to the latest draft version, which is currently ECMAScript 2020.\n\nDo not confuse JavaScript with the Java programming language. Both \"Java\" and \"JavaScript\" are trademarks or registered trademarks of Oracle in the U.S. and other countries. However, the two programming languages have a very different syntax, semantic, and use.\n \n Quelle: https://developer.mozilla.org/en-US/docs/Web/JavaScript"
    },
    "functions": {
      "value": "Functions \n \n A JavaScript function is a block of code designed to perform a particular task.\n\nA JavaScript function is executed when \"something\" invokes it (calls it). \n A JavaScript function is defined with the function keyword, followed by a name, followed by parentheses ().\n\nFunction names can contain letters, digits, underscores, and dollar signs (same rules as variables).\n\nThe parentheses may include parameter names separated by commas:\n(parameter1, parameter2, ...)\n\nThe code to be executed, by the function, is placed inside curly brackets: {} \n Function parameters are listed inside the parentheses () in the function definition.\n\nFunction arguments are the values received by the function when it is invoked.\n\nInside the function, the arguments (the parameters) behave as local variables. \n The code inside the function will execute when \"something\" invokes (calls) the function:\n\nWhen an event occurs (when a user clicks a button)\nWhen it is invoked (called) from JavaScript code\nAutomatically (self invoked)\nYou will learn a lot more about function invocation later in this tutorial.\n When JavaScript reaches a return statement, the function will stop executing.\n\nIf the function was invoked from a statement, JavaScript will \"return\" to execute the code after the invoking statement.\n\nFunctions often compute a return value. The return value is \"returned\" back to the \"caller\"\n \nQuelle: https://www.w3schools.com/js/js_functions.asp"
    },
    "objects": {
      "value": "Objects\n \n In JavaScript, almost \"everything\" is an object.\n\nBooleans can be objects (if defined with the new keyword)\nNumbers can be objects (if defined with the new keyword)\nStrings can be objects (if defined with the new keyword)\nDates are always objects\nMaths are always objects\nRegular expressions are always objects\nArrays are always objects\nFunctions are always objects\nObjects are always objects\nAll JavaScript values, except primitives, are objects. \n \n A primitive value is a value that has no properties or methods.\n\nA primitive data type is data that has a primitive value.\n\nJavaScript defines 5 types of primitive data types:\n\nstring\nnumber\nboolean\nnull\nundefined\nPrimitive values are immutable (they are hardcoded and therefore cannot be changed). \n \n \n \n Quelle: https://www.w3schools.com/js/js_object_definition.asp"
    },
    "scope": {
      "value": "Scope \n \n Scope determines the accessibility (visibility) of variables. \n \n In JavaScript there are two types of scope:\n\nLocal scope\nGlobal scope\nJavaScript has function scope: Each function creates a new scope.\n\nScope determines the accessibility (visibility) of these variables.\n\nVariables defined inside a function are not accessible (visible) from outside the function.\n\nVariables declared within a JavaScript function, become LOCAL to the function.\n\nLocal variables have Function scope: They can only be accessed from within the function.\n\nSince local variables are only recognized inside their functions, variables with the same name can be used in different functions.\n\nLocal variables are created when a function starts, and deleted when the function is completed.\n\nA variable declared outside a function, becomes GLOBAL.\n\nA global variable has global scope: All scripts and functions on a web page can access it. \n\n In JavaScript, objects and functions are also variables.\n \n Quelle: https://www.w3schools.com/js/js_scope.asp"
    },
    "events": {
      "value": "Events \n \n HTML events are \"things\" that happen to HTML elements.\n\nWhen JavaScript is used in HTML pages, JavaScript can \"react\" on these events.\n\n An HTML event can be something the browser does, or something a user does.\n\nHere are some examples of HTML events:\n\nAn HTML web page has finished loading\nAn HTML input field was changed\nAn HTML button was clicked\nOften, when events happen, you may want to do something.\n\nJavaScript lets you execute code when events are detected.\n\nHTML allows event handler attributes, with JavaScript code, to be added to HTML elements. \n\n Event handlers can be used to handle, and verify, user input, user actions, and browser actions:\n\nThings that should be done every time a page loads\nThings that should be done when the page is closed\nAction that should be performed when a user clicks a button\nContent that should be verified when a user inputs data\nAnd more ...\nMany different methods can be used to let JavaScript work with events:\n\nHTML event attributes can execute JavaScript code directly\nHTML event attributes can call JavaScript functions\nYou can assign your own event handler functions to HTML elements\nYou can prevent events from being sent or being handled\nAnd more ...\n \n Quelle: https://www.w3schools.com/js/js_events.asp"
    },
    "hoisting": {
      "value": "Hoisting \n \n In JavaScript, a variable can be declared after it has been used.\n\nIn other words; a variable can be used before it has been declared. \n \n To understand this, you have to understand the term \"hoisting\".\n\nHoisting is JavaScript's default behavior of moving all declarations to the top of the current scope (to the top of the current script or the current function).\n\n Variables and constants declared with let or const are not hoisted! \n \n Hoisting is (to many developers) an unknown or overlooked behavior of JavaScript.\n\nIf a developer doesn't understand hoisting, programs may contain bugs (errors).\n\nTo avoid bugs, always declare all variables at the beginning of every scope.\n\nSince this is how JavaScript interprets the code, it is always a good rule.\n \n Quelle:  https://www.w3schools.com/js/js_hoisting.asp"
    },
    "strict_mode": {
      "value": "Strict_mode \n \n \"use strict\"; Defines that JavaScript code should be executed in \"strict mode\". \n \n The \"use strict\" directive was new in ECMAScript version 5.\n\nIt is not a statement, but a literal expression, ignored by earlier versions of JavaScript.\n\nThe purpose of \"use strict\" is to indicate that the code should be executed in \"strict mode\".\n\nWith strict mode, you can not, for example, use undeclared variables.\n\nAll modern browsers support \"use strict\" except Internet Explorer 9 and lower\n \n You can use strict mode in all your programs. It helps you to write cleaner code, like preventing you from using undeclared variables.\n\n\"use strict\" is just a string, so IE 9 will not throw an error even if it does not understand it. \n \n Strict mode is declared by adding \"use strict\"; to the beginning of a script or a function.\n\nDeclared at the beginning of a script, it has global scope (all code in the script will execute in strict mode) \n \n Quelle: https://www.w3schools.com/js/js_strict.asp "
    },
    "JSON": {
      "value": "JSON \n \n JSON is a format for storing and transporting data.\n\nJSON is often used when data is sent from a server to a web page. \n \n JSON stands for JavaScript Object Notation\nJSON is a lightweight data interchange format\nJSON is language independent *\nJSON is \"self-describing\" and easy to understand\n* The JSON syntax is derived from JavaScript object notation syntax, but the JSON format is text only. Code for reading and generating JSON data can be written in any programming language.\n\n The JSON format is syntactically identical to the code for creating JavaScript objects.\n\nBecause of this similarity, a JavaScript program can easily convert JSON data into native JavaScript objects. \n \n Data is in name/value pairs\nData is separated by commas\nCurly braces hold objects\nSquare brackets hold arrays \n \n Quelle: https://www.w3schools.com/js/js_json.asp"
    }
  },
  "other": {
    "Start": {
      "value": "Weitere Informationen <br> <br> Diese Webseite ist im Verlauf der Hausarbeit Web Engineering entstanden und nutzt viele der vorher aufgelisteten Techniken und asynchrones fetchen, um die Inhalte Hier anzuzeigen <br> <br> Ersteller: Fabian Klug <br> Student an der Hochschule Bonn-Rhein-Sieg <br> fabian.klug@smail.inf.h-brs.de <br> <br> Die genutzten Bilder dürfen weiter genutzt werden mit Quellen: <br><a>https://pxhere.com/en/photo/1430373</a> <br> <a>https://www.flickr.com/photos/152975694@N02/35594063933/</a> <br> <a> https://www.google.com/url?sa=i&url=https%3A%2F%2Fde.wikipedia.org%2Fwiki%2FDatei%3AHTML5_Logo.svg&psig=AOvVaw0Oq0Cg-X7cEdzYKbUzVW45&ust=1594645547102000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCNDmu97jx-oCFQAAAAAdAAAAABAD</a><br> (Alle zur Wiederverwendung gekennzeichnet) "
    },
    "Aufgaben":{
      "value": "Aufgabenübersicht: <br>Auf der folgenden Seite sind alle Aufgaben verlinkt. Einfach draufklicken und durchklicken <br>  <br>  <a href='../../index.html' style='color:white; text-decoration:underline; '> <b> Zur Aufgabenübersicht <b></a>"
    }
  }
}
